#which values does "Quality" take?:
house %>% select(Quality) %>% distinct()
#which values does "AdjHighway" take?:
house %>% select(AdjHighway) %>% distinct()
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#is it normal?
qqnorm(Price)
#boxplot:
ggplot(data=house, aes(x="", y=Price)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#Check for impossible values:
sum(is.na(Price))
sum(Price[Price < 0])
#summary:
summary(Sqft)
#histogram:
ggplot(data=house, aes(Sqft)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Sqft")
#null values?
sum(is.na(Sqft))
#scatter plot:
ggplot(data = house, aes(x=Sqft,y=Price))+
geom_point()+
labs(title="Scatter plot of the price as a function of the size (Sqft)")
#correlation:
cor(Price,Sqft)
#barplot:
ggplot(data=house, aes(Bedroom)) +
geom_bar()
#table of the different values:
table(Bedroom)
#null values?
sum(is.na(Bedroom))
#mean for the different values of the categorical variable:
mean_cat <- house %>%
group_by(Bedroom) %>%
summarise(m=mean(Price))
#plot the mean values for the diffrent bedrooms:
ggplot(data=mean_cat, aes(x=Bedroom,y=m)) +
geom_point()+
labs(title="Plot of the mean values of the price against the number of bedrooms")
cor(Price,Bedroom)
#scatter plot:
ggplot(data = house, aes(x=Bedroom,y=Price))+
geom_point()+
labs(title="Scatter plot of the price as a function of the size (Sqft)")
#table + calculate percentage:
ac_table<-table(Airconditioning)
#table + calculate percentage:
ac_table<-table(Airconditioning)
ac_table
100*ac_table[2]/(ac_table[1]+ac_table[2])
#null values?
sum(is.na(Airconditioning))
#mean for the two values:
house %>%
group_by(Airconditioning) %>%
summarise(m=mean(Price))
reg_AC <- lm(Price ~ Airconditioning)
summary(reg_AC)
t.test(Price[Airconditioning==1],Price[Airconditioning==0])
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Residuals",
cex = 0.5, log = "x"))
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Residuals")
abline(0,0, lty = 2)
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Residuals")
abline(0,0, lty = 2)
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Sqft",title="Residuals plot")
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Sqft",main="Residuals plot")
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Sqft",main="Residuals against predictor Sqft"")
abline(0,0, lty = 2)
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Sqft",main="Residuals against predictor Sqft")
plot(Sqft, residuals(simple_reg), xlab = "Population", ylab = "Sqft",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
#residuals plot
plot(Sqft, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
#boxplot:
ggplot(data=house, aes(x="", y=log(Price)) +
#boxplot:
geom_boxplot()+
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(readr)
#read data in and have a look at it:
house <- read_csv("data/realestate.csv")
head(house)
#we only work with "house":
attach(house)
#delete column "ID":
house <- house[,-1]
#dim of house:
dim(house)
names(house)
#is "Pool" binary or does t count the number of pools?
house %>% select(Pool) %>% distinct()
#which values does "Quality" take?:
house %>% select(Quality) %>% distinct()
#which values does "AdjHighway" take?:
house %>% select(AdjHighway) %>% distinct()
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#is it normal?
qqnorm(Price)
#boxplot:
ggplot(data=house, aes(x="", y=log(Price)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#Check for impossible values:
sum(is.na(Price))
#is it normal?
qqnorm(log(Price)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(readr)
#read data in and have a look at it:
house <- read_csv("data/realestate.csv")
head(house)
#we only work with "house":
attach(house)
#delete column "ID":
house <- house[,-1]
#dim of house:
dim(house)
names(house)
#is "Pool" binary or does t count the number of pools?
house %>% select(Pool) %>% distinct()
#which values does "Quality" take?:
house %>% select(Quality) %>% distinct()
#which values does "AdjHighway" take?:
house %>% select(AdjHighway) %>% distinct()
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#is it normal?
qqnorm(log(Price)
#boxplot:
ggplot(data=house, aes(x="", y=Price) +
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#is it normal?
qqnorm(log(Price))
#boxplot:
ggplot(data=house, aes(x="", y=Price) +
geom_boxplot()+
labs(title="Boxplot for Price")
#Check for impossible values:
sum(is.na(Price))
#boxplot:
ggplot(data=house, aes(x="", y=Price)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#histogram:
ggplot(data=house, aes(log(Price))) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
reg_AC <- lm(Price ~ log(Airconditioning))
#simple linear model
simple_reg <- lm(Price ~ log(Sqft))
#residuals plot
plot(Sqft, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
#simple linear model
simple_reg <- lm(log(Price) ~ log(Sqft))
#residuals plot
plot(Sqft, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
#store a copy of housing:
housing_c <- housing
#store a copy of housing:
house_c <- house
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price))
detach(house)
attach(house_c)
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price))
#histogram:
ggplot(data=house_c, aes(Price_log)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for logarithmic Price")
#histogram:
ggplot(data=house_c, aes(Price_log)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for logarithmic Price")
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#histogram:
ggplot(data=house_c, aes(Price_log)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for logarithmic Price")
#is it normal?
qqnorm(Price_log)
#is it normal?
qqnorm(Price)
#boxplot:
ggplot(data=house_c, aes(x="", y=Price_log)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#delete Price column:
house_c <- select(-Price)
house_c
#delete Price column:
house_c <- house_c %>% select(-Price)
house_c
#store a copy of housing:
house_c <- house
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price),Sqft = log(Sqft))
qqnorm(Sqft)
#store a copy of housing:
house_c <- house
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price),Sqft_log = log(Sqft))
qqnorm(Sqft)
qqnorm(Sqft_log)
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price),Sqft_log = log(Sqft))
qqnorm(Sqft)
qqnorm(Sqft_log)
#store a copy of housing:
house_c <- house
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price),Sqft_log = log(Sqft))
glimpse(house_c)
attach(house_c)
qqnorm(Sqft)
qqnorm(Sqft_log)
#delete Price column:
house_c <- house_c %>% select(-c(Price,Sqft))
house_c
#simple linear model
simple_reg <- lm(Price_log ~ Sqft_log)
summary(simple_reg)
ggplot(house_c, aes(x=Sqft_log, y=Price_log)) +
geom_point() +
geom_smooth(method=lm)+   # Add linear regression line
labs(title="Scatter plot of the price vs the size of the house (sqft)")
#residuals plot
plot(Sqft_log, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(readr)
#read data in and have a look at it:
house <- read_csv("data/realestate.csv")
head(house)
#we only work with "house":
attach(house)
#delete column "ID":
house <- house[,-1]
#dim of house:
dim(house)
names(house)
#is "Pool" binary or does t count the number of pools?
house %>% select(Pool) %>% distinct()
#which values does "Quality" take?:
house %>% select(Quality) %>% distinct()
#which values does "AdjHighway" take?:
house %>% select(AdjHighway) %>% distinct()
#summary statistics:
summary(Price)
#histogram:
ggplot(data=house, aes(Price)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Price")
#is it normal?
qqnorm(Price)
#boxplot:
ggplot(data=house, aes(x="", y=Price)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#Check for impossible values:
sum(is.na(Price))
sum(Price[Price < 0])
#summary:
summary(Sqft)
#histogram:
ggplot(data=house, aes(Sqft)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Sqft")
#null values?
sum(is.na(Sqft))
#scatter plot:
ggplot(data = house, aes(x=Sqft,y=Price))+
geom_point()+
labs(title="Scatter plot of the price as a function of the size (Sqft)")
#correlation:
cor(Price,Sqft)
#barplot:
ggplot(data=house, aes(Bedroom)) +
geom_bar()
#table of the different values:
table(Bedroom)
#null values?
sum(is.na(Bedroom))
#mean for the different values of the categorical variable:
mean_cat <- house %>%
group_by(Bedroom) %>%
summarise(m=mean(Price))
#plot the mean values for the diffrent bedrooms:
ggplot(data=mean_cat, aes(x=Bedroom,y=m)) +
geom_point()+
labs(title="Plot of the mean values of the price against the number of bedrooms")
#correlation
cor(Price,Bedroom)
#scatter plot:
ggplot(data = house, aes(x=Bedroom,y=Price))+
geom_point()+
labs(title="Scatter plot of the price as a function of the size (Sqft)")
#correlation:
ggplot(data=house, aes(Bathroom)) +
geom_bar()+
labs(title="Barplot of the variable Bathroom")
table(Bathroom)
#null values?
sum(is.na(Bathroom))
#mean for the different values of the categorical variable:
mean_cat <- house %>%
group_by(Bathroom) %>%
summarise(m=mean(Price))
mean_cat
#plot the mean values for the diffrent bedrooms:
ggplot(data=mean_cat, aes(x=Bathroom,y=m)) +
geom_point()+
labs(title="Plot of the mean values of the price against the number of bathrooms")
#table + calculate percentage:
ac_table<-table(Airconditioning)
ac_table
100*ac_table[2]/(ac_table[1]+ac_table[2])
#null values?
sum(is.na(Airconditioning))
#mean for the two values:
house %>%
group_by(Airconditioning) %>%
summarise(m=mean(Price))
#barplot
ggplot(data=house, aes(Garage)) +
geom_bar()+
labs(title="Barplot of the variable Garage")
table(Garage)
#null values?
sum(is.na(Garage))
#mean for the different values of the categorical variable:
mean_cat <- house %>%
group_by(Garage) %>%
summarise(m=mean(Price))
#plot the mean values for the diffrent bedrooms:
ggplot(data=mean_cat, aes(x=Garage,y=m)) +
geom_point()+
labs(title="Plot of the mean values of the price against the number of garages")
#generate a frequency table and calculate percentage:
pool_table <-table(Pool)
pool_table
100*pool_table[2]/(pool_table[1]+pool_table[2])
#null values?
sum(is.na(Pool))
#Is a house with a pool worth more?
house %>%
group_by(Pool) %>%
summarise(m=mean(Price))
#barplot
ggplot(data=house, aes(YearBuild)) +
geom_bar()+
labs(title="Barplot of the variable YearBuild")
summary(YearBuild)
#null values?
sum(is.na(YearBuild))
#scatterplot between the year and the price:
ggplot(data=house, aes(x=YearBuild,y=Price))+
geom_point()+
labs(title="Scatter plot of the price against the year in which the house was built")
#table for the quality:
table(Quality)
#mean values for different quality houses:
house %>%
group_by(Quality) %>%
summarise(mean(Price))
#null values?
sum(is.na(Quality))
#histogram:
ggplot(data=house, aes(Lot)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for Lot")
#is it normal?
qqnorm(Lot)
#boxplot:
ggplot(data=house, aes(x="", y=Lot)) +
geom_boxplot()+
labs(title="Boxplot for Lot")
#summary statistics:
summary(Lot)
#null values?
sum(is.na(Lot))
#scatter plot with Price
ggplot(data=house,aes(x=Lot,y=Price))+
geom_point() +
labs(title="Scatter plot of Lot(x) against Price(y)")
#are they correlated?
cor(Price,Lot)
#table for the quality:
table(AdjHighway)
#mean for the different values of the categorical variable:
house %>%
group_by(AdjHighway) %>%
summarise(mean(Price))
#null values?
sum(is.na(AdjHighway))
#simple linear model
simple_reg <- lm(Price ~ Sqft)
summary(simple_reg)
ggplot(house, aes(x=Sqft, y=Price)) +
geom_point() +
geom_smooth(method=lm)+   # Add linear regression line
labs(title="Scatter plot of the price vs the size of the house (sqft)")
#residuals plot
plot(Sqft, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
#store a copy of housing:
house_c <- house
detach(house)
attach(house_c)
## try to improve symmetry for price:
house_c <- house_c %>% mutate(Price_log = log(Price),Sqft_log = log(Sqft))
glimpse(house_c)
#histogram:
ggplot(data=house_c, aes(Price_log)) +
geom_histogram(col="white",
bins=35) +
labs(title="Histogram for logarithmic Price")
#is it normal?
qqnorm(Price_log)
#boxplot:
ggplot(data=house_c, aes(x="", y=Price_log)) +
geom_boxplot()+
labs(title="Boxplot for Price")
#delete initial columns:
house_c <- house_c %>% select(-c(Price,Sqft))
#simple linear model
simple_reg <- lm(Price_log ~ Sqft_log)
summary(simple_reg)
ggplot(house_c, aes(x=Sqft_log, y=Price_log)) +
geom_point() +
geom_smooth(method=lm)+   # Add linear regression line
labs(title="Scatter plot of the price vs the size of the house (sqft)")
#residuals plot
plot(Sqft_log, residuals(simple_reg), xlab = "Sqft", ylab = "Residuals",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
reg_AC <- lm(Price ~ Airconditioning)
summary(reg_AC)
t.test(Price[Airconditioning==1],Price[Airconditioning==0])
plot(house)
cor(house)
#a lot of linear reationships
#create year_x = year - (min(year)+1)
house_c <- house_c %>% mutate(year_x = YearBuild-(min(YearBuild)+1))
#remove old column:
house_c <- house_c %>% select(-YearBuild)
#create year_x = year - (min(year)+1)
house_c <- house_c %>% mutate(year_x = YearBuild-(min(YearBuild)+1))
#remove old column:
house_c <- house_c %>% select(-YearBuild)
reg <- lm(Price_log ~ Sqft_log+year_x)
house_c
reg <- lm(house_c$Price_log ~ house_c$Sqft_log+house_c$year_x)
summary(reg)
plot(house_c$year_x, residuals(reg), xlab = "Sqft_log", ylab = "Residuals",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
plot(house_c$year_x, residuals(reg), xlab = "Sqft_log", ylab = "Residuals",main="Residuals against predictor Sqft")
abline(0,0, lty = 2)
