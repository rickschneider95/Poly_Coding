faits_2010=faits_2010[-(1:3), ,drop=FALSE]
#Now we need to delete the column containing the excel computation "Tout_Departement"
faits_2010 <- faits_2010 %>%
select(-"Tout département")
#gather
faits_2010 <- gather(faits_2010,"dpt","nombre",3:98)
#delete column "Service ÃÂ  comp?tence national"
faits_2010 <- faits_2010 %>%
select(-"Service à compétence national")
write.csv(faits_2010, file = "data/faits_2010_modif2.csv")
View(faits_2010)
faits_2010_modif=read_csv("data/faits_2010_modif.csv")
faits_2010_modif2=read_csv("data/faits_2010_modif2.csv", locale = locale(encoding = "latin1"))
View(faits_2010_modif)
View(faits_2010_modif2)
#save a copys:
prenoms_c <- prenoms
dpp_modif_c <- depp_modif
faits_2010_modif_c <- faits_2010_modif
dpt_data_modif_c <- dpt_data_modif
#only dpt 01 to 95
prenoms_c <- prenoms_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
dpp_modif_c <- dpp_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
#####  Prenoms  #####
#1) Correct the column n. If 2 people from 2A and 2B have the same year, name and sex, we need to update n
col_AB <- prenoms_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(year,name,sex) %>%
mutate(n=sum(n)) %>%                   #identical entries in 2A,2B -> sum of n
ungroup()
#2) Update the proportion which has and change the name of dpt to "20. Delete the duplicate rows
col_AB <- col_AB %>%
group_by(year,sex) %>%
mutate(prop=n/sum(n),                  #calculate the new proportions
dpt="20") %>%                   #replace 2a and 2B by 20
ungroup() %>%
distinct()
#3) Merge the new rows in col_AB withe the rows in prenoms_c (replace the rows containing 2A and 2B)
#Get rid of 2A and 2B in prenoms_c
prenoms_c <- prenoms_c %>%
filter(!dpt %in% c("2A","2B"))
#merge them together:
prenoms_c <- rbind(prenoms_c,col_AB)
col_ABCD <- prenoms_c %>%
filter(dpt %in% c("2A","2B"))
dim(col_ABCD) #47318, how can that make sense ?????????
dim(prenoms_c) #3497458
dim(prenoms)   #3712763
levels(as.factor(prenoms_c$dpt))
#####  dpp_modif  #####
dpp_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                      #result:0, no wos with 2A,2B
#####  faits_2010_modif  #####
faits_2010_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                       #result = 206, we need t change them!
col_AB <- faits_2010_modif_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(LibellÃ©) %>%
col_AB <- faits_2010_modif_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(LibellÃ©) %>%
#save a copys:
prenoms_c <- prenoms
faits_2010_modif_c <- faits_2010_modif
#only dpt 01 to 95
prenoms_c <- prenoms_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
#only dpt 01 to 95
prenoms_c <- prenoms_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
dpp_modif_c <- dpp_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
#####  Prenoms  #####
#1) Correct the column n. If 2 people from 2A and 2B have the same year, name and sex, we need to update n
col_AB <- prenoms_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(year,name,sex) %>%
mutate(n=sum(n)) %>%                   #identical entries in 2A,2B -> sum of n
ungroup()
#2) Update the proportion which has and change the name of dpt to "20. Delete the duplicate rows
col_AB <- col_AB %>%
group_by(year,sex) %>%
mutate(prop=n/sum(n),                  #calculate the new proportions
dpt="20") %>%                   #replace 2a and 2B by 20
ungroup() %>%
distinct()
#3) Merge the new rows in col_AB withe the rows in prenoms_c (replace the rows containing 2A and 2B)
#Get rid of 2A and 2B in prenoms_c
prenoms_c <- prenoms_c %>%
filter(!dpt %in% c("2A","2B"))
#merge them together:
prenoms_c <- rbind(prenoms_c,col_AB)
col_ABCD <- prenoms_c %>%
filter(dpt %in% c("2A","2B"))
dim(col_ABCD) #47318, how can that make sense ?????????
#####  dpp_modif  #####
dpp_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                      #result:0, no wos with 2A,2B
dim(prenoms_c) #3497458
dim(prenoms)   #3712763
levels(as.factor(prenoms_c$dpt))
#####  dpp_modif  #####
dpp_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                      #result:0, no wos with 2A,2B
#####  faits_2010_modif  #####
faits_2010_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                       #result = 206, we need t change them!
col_AB <- faits_2010_modif_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(LibellÃ©) %>%
col_AB <- faits_2010_modif_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(Libellé) %>%
mutate(nombre=sum(nombre)) %>%
ungroup() %>%
mutate(dpt="20") %>%
ungroup() %>%
distinct()
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in% c("2A","2B"))
faits_2010_modif_c <- rbind(faits_2010_modif_c,col_AB)
faits_2010_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())
### ASSUMPTIONS: ###
# every children between 11 and 14 years old is in a college
# the number of college is constant between 2010 and 2016
# College "ÃÂ  ouvrir" (i.e. "to be open") do not have children. Others have.
#number of children between 11 and 14 years (born in 1996-1999 inclusive(assumption))
n_child_11_14 <- prenoms_c %>%
filter(year %in% 1996:1999) %>%
summarise(sum(n))
#number of colleges in 2010
n_college_2010 <- dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>%    ###A ourvir???????
summarise(n())
average=n_child_11_14/n_college_2010
n_child_11_14
n_college_2010
round(average)
#n_child_11_14
#n_college_2010
average
#number of children between 11 and 14 years (born in 1996-1999 inclusive(assumption)) per department
n_child_11_14_dp <- prenoms_c %>%
filter(year %in% 1996:1999) %>%
group_by(dpt) %>%
arrange(dpt) %>%
summarise(sum_child=sum(n))
dim(n_child_11_14_dp) #95 rows -> dpt =1 to dpt= 95
#number of colleges in 2010 per departments
n_college_2010_dp <- dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>% ###A ourvir???????
group_by(dpt) %>%
arrange(dpt) %>%
summarise(count_coll=n())
View(n_college_2010_dp)
dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>% ###A ourvir???????
group_by(dpt) %>%
View()
View(dpp_modif_c)
#number of children between 11 and 14 years (born in 1996-1999 inclusive(assumption)) per department
n_child_11_14_dp <- prenoms_c %>%
filter(year %in% 1996:1999) %>%
group_by(dpt) %>%
arrange(dpt) %>%
summarise(sum_child=sum(n))
dim(n_child_11_14_dp) #95 rows -> dpt =1 to dpt= 95
#number of colleges in 2010 per departments
n_college_2010_dp <- dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>% ###A ourvir???????
group_by(dpt) %>%
arrange(dpt) %>%
summarise(count_coll=n())
dim(n_college_2010_dp) #96 rows -->one row contains NA, i.e. 9840422L has null entries!
n_college_2010_dp <- n_college_2010_dp %>% drop_na() #remove the NAs
dim(n_college_2010_dp) #95 rows as well now
#Calculate averae per dpt, sort in decreasing order and rename column to avg_child_per_dpt
average_dpt <- n_child_11_14_dp
average_dpt$sum_child <- n_child_11_14_dp$sum_child/n_college_2010_dp$count_coll
average_dpt <- average_dpt %>%
arrange(desc(sum_child)) %>%
rename(avg_child_per_dpt = sum_child)
average_dpt
n_facts_per_dpt <- faits_2010_modif_c %>%
group_by(dpt) %>%
summarise(sum_facts=sum(nombre))
View(n_facts_per_dpt)
View(faits_2010_modif_c)
# n_facts_per_dpt : facts related by the police services per department in 2010
# n_college_2010_dp : number of colleges in 2010 per dpt
# n_child_2010_dp: number of children born per dpt in 2010
n_child_2010_dp <- prenoms_c %>%
filter(year == 2010) %>%
group_by(dpt) %>%
arrange(dpt) %>%
summarise(sum_child=sum(n))
#join the tables:
table_dpt_2010 <- inner_join(n_child_2010_dp, n_college_2010_dp, by = "dpt")
table_dpt_2010 <- inner_join(table_dpt_2010,n_facts_per_dpt, by = "dpt")
#arrang in descending order:
table_dpt_2010 <- table_dpt_2010 %>% arrange(desc(sum_child),desc(count_coll),desc(sum_facts))
sum(is.na(table_dpt_2010)) ########### 1NA, check out why!!!!!!  --> value is 18529, why is it missing?
View(table_dpt_2010)
########### 1NA, check out why!!!!!!  --> value is 18529, why is it missing? It is missing in sum_facts. look at faits_2010_modif_c
View(faits_2010_modif_c)
faits_2010 = read_excel("data/faitsconstatespardepartementde2002-a-2011.xls", sheet = "2010")
#change the column names to the names that are currently stored in the second row
colnames(faits_2010) = faits_2010[2, ]
#delte row 1 to 3, as they are not needed anymore.
#row 1 is empty, row 2 contains the titles so it is no longer needed and row 3 contains the excel computation "Tout_Index""
faits_2010=faits_2010[-(1:3), ,drop=FALSE]
#Now we need to delete the column containing the excel computation "Tout_Departement"
faits_2010 <- faits_2010 %>%
select(-"Tout département")
#gather
faits_2010 <- gather(faits_2010,"dpt","nombre",3:98)
#delete column "Service ÃÂ  comp?tence national"
faits_2010 <- faits_2010 %>%
select(-"Service à compétence national")
write.csv(faits_2010, file = "data/faits_2010_modif2.csv")
View(faits_2010)
knitr::opts_chunk$set(echo = TRUE,eval=TRUE)
library(dplyr)
library(prenoms)
library(tidyverse)
library(readxl)
library(knitr)
data(prenoms)
class(prenoms)
glimpse(prenoms)
dpt_data_modif = read_csv("data/dpt_data_modif.csv")
#head(dpt_data_modif)
#dim(dpt_data_modif)
#names(dpt_data_modif)
#summary(dpt_data_modif)
View(dpt_data_modif)
depp_orig=read_csv2("data/DEPP-etab-1D2D.csv", locale = locale(encoding = "latin1"))
View(depp_orig)
glimpse(depp_orig)
#"code_postal_uai" is an int; we need to transform it to a char of 5 char an fill up with 0's
depp_orig$code_postal_uai <- parse_character(depp_orig$code_postal_uai)
####    Why does this not work??????   ####
#depp_orig$code_postal_uai <- depp_orig %>%
#  mutate(code_postal_uai = str_pad(code_postal_uai, 5, pad = "0", "left"))
depp_orig$code_postal_uai <- str_pad(depp_orig$code_postal_uai, 5, pad = "0", "left")
depp_orig$dp <- str_sub(depp_orig$code_postal_uai, start = 1, end = 2)
View(depp_orig)
write.csv2(depp_orig, file = "data/depp_modif2.csv")
depp_modif=read_csv("data/depp_modif.csv")
View(depp_modif)
faits_2010 = read_excel("data/faitsconstatespardepartementde2002-a-2011.xls", sheet = "2010")
#change the column names to the names that are currently stored in the second row
colnames(faits_2010) = faits_2010[2, ]
#delte row 1 to 3, as they are not needed anymore.
#row 1 is empty, row 2 contains the titles so it is no longer needed and row 3 contains the excel computation "Tout_Index""
faits_2010=faits_2010[-(1:3), ,drop=FALSE]
#Now we need to delete the column containing the excel computation "Tout_Departement"
faits_2010 <- faits_2010 %>%
select(-"Tout département")
#gather
faits_2010 <- gather(faits_2010,"dpt","nombre",3:98)
#delete column "Service ÃÂ  comp?tence national"
faits_2010 <- faits_2010 %>%
select(-"Service à compétence national")
write.csv(faits_2010, file = "data/faits_2010_modif2.csv")
View(faits_2010)
#faits_2010_modif=read_csv("data/faits_2010_modif.csv")
faits_2010_modif=read_csv("data/faits_2010_modif2.csv", locale = locale(encoding = "latin1"))
#View(faits_2010_modif)
#View(faits_2010_modif2)
#save a copys:
prenoms_c <- prenoms
dpp_modif_c <- depp_modif
faits_2010_modif_c <- faits_2010_modif
dpt_data_modif_c <- dpt_data_modif
#only dpt 01 to 95
prenoms_c <- prenoms_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
dpp_modif_c <- dpp_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in%  c("96","97","98","99","100","971","972","973","974"))
#####  Prenoms  #####
#1) Correct the column n. If 2 people from 2A and 2B have the same year, name and sex, we need to update n
col_AB <- prenoms_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(year,name,sex) %>%
mutate(n=sum(n)) %>%                   #identical entries in 2A,2B -> sum of n
ungroup()
#2) Update the proportion which has and change the name of dpt to "20. Delete the duplicate rows
col_AB <- col_AB %>%
group_by(year,sex) %>%
mutate(prop=n/sum(n),                  #calculate the new proportions
dpt="20") %>%                   #replace 2a and 2B by 20
ungroup() %>%
distinct()
#3) Merge the new rows in col_AB withe the rows in prenoms_c (replace the rows containing 2A and 2B)
#Get rid of 2A and 2B in prenoms_c
prenoms_c <- prenoms_c %>%
filter(!dpt %in% c("2A","2B"))
#merge them together:
prenoms_c <- rbind(prenoms_c,col_AB)
col_ABCD <- prenoms_c %>%
filter(dpt %in% c("2A","2B"))
dim(col_ABCD) #47318, how can that make sense ?????????
dim(prenoms_c) #3497458
dim(prenoms)   #3712763
#levels(as.factor(prenoms_c$dpt))
#####  dpp_modif  #####
dpp_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                      #result:0, no wos with 2A,2B
#####  faits_2010_modif  #####
faits_2010_modif_c  %>%
filter(dpt %in% c("2A","2B")) %>%
summarise(n())                       #result = 206, we need t change them!
col_AB <- faits_2010_modif_c %>%
filter(dpt %in% c("2A","2B")) %>%
group_by(Libellé) %>%
mutate(nombre=sum(nombre)) %>%
ungroup() %>%
mutate(dpt="20") %>%
ungroup() %>%
distinct()
faits_2010_modif_c <- faits_2010_modif_c %>%
filter(!dpt %in% c("2A","2B"))
faits_2010_modif_c <- rbind(faits_2010_modif_c,col_AB)
####  dpt_data_modif_c  ####
#For now, we are not going to change 2A and 2B into 20, as this file contains information about 2A and 2B that we cannot summarizre in one row without more information available. In a later step, if we need to do computations with the surface, we can simply add up the surface of 2A and 2B.
### ASSUMPTIONS: ###
# every children between 11 and 14 years old is in a college
# the number of college is constant between 2010 and 2016
# College "ÃÂ  ouvrir" (i.e. "to be open") do not have children. Others have.
#number of children between 11 and 14 years (born in 1996-1999 inclusive(assumption))
n_child_11_14 <- prenoms_c %>%
filter(year %in% 1996:1999) %>%
summarise(sum(n))
#number of colleges in 2010
n_college_2010 <- dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>%    ###A ourvir???????
summarise(n())
average=n_child_11_14/n_college_2010
#n_child_11_14
#n_college_2010
average
#number of children between 11 and 14 years (born in 1996-1999 inclusive(assumption)) per department
n_child_11_14_dp <- prenoms_c %>%
filter(year %in% 1996:1999) %>%
group_by(dpt) %>%
arrange(dpt) %>%
summarise(sum_child=sum(n))
dim(n_child_11_14_dp) #95 rows -> dpt =1 to dpt= 95
#number of colleges in 2010 per departments
n_college_2010_dp <- dpp_modif_c %>%
filter(nature_uai %in% c(352,350,340)) %>% ###A ourvir???????
group_by(dpt) %>%
arrange(dpt) %>%
summarise(count_coll=n())
dim(n_college_2010_dp) #96 rows -->one row contains NA, i.e. 9840422L has null entries!
n_college_2010_dp <- n_college_2010_dp %>% drop_na() #remove the NAs
dim(n_college_2010_dp) #95 rows as well now
#Calculate averae per dpt, sort in decreasing order and rename column to avg_child_per_dpt
average_dpt <- n_child_11_14_dp
average_dpt$sum_child <- n_child_11_14_dp$sum_child/n_college_2010_dp$count_coll
average_dpt <- average_dpt %>%
arrange(desc(sum_child)) %>%
rename(avg_child_per_dpt = sum_child)
#average_dpt
#group by departments and sum the # of facts:
n_facts_per_dpt <- faits_2010_modif_c %>%
group_by(dpt) %>%
summarise(sum_facts=sum(nombre))
#delete he last row (service Ã  compÃ©tence nationale), which is not a dpt per definition
n_facts_per_dpt <- n_facts_per_dpt[-96,]
# n_facts_per_dpt : facts related by the police services per department in 2010
# n_college_2010_dp : number of colleges in 2010 per dpt
# n_child_2010_dp: number of children born per dpt in 2010
n_child_2010_dp <- prenoms_c %>%
filter(year == 2010) %>%
group_by(dpt) %>%
arrange(dpt) %>%
summarise(sum_child=sum(n))
#join the tables:
table_dpt_2010 <- inner_join(n_child_2010_dp, n_college_2010_dp, by = "dpt")
table_dpt_2010 <- inner_join(table_dpt_2010,n_facts_per_dpt, by = "dpt")
#arrang in descending order:
table_dpt_2010 <- table_dpt_2010 %>% arrange(desc(sum_child),desc(count_coll),desc(sum_facts))
sum(is.na(table_dpt_2010))
########### 1NA, check out why!!!!!!  --> value is 18529, why is it missing? It is missing in sum_facts. look at faits_2010_modif_c in dpt 71  -> Usage de stupéfiants has a NA entry!
View(faits_2010_modif_c)
View(table_dpt_2010)
#square_km per dpt:
km2_dpt <- dpt_data_modif_c %>%
select(CODE_DEPT,surface_m) %>%
mutate(surface_m = surface_m/(10^6))
#Change 2A and 2B to 20:
#sum of m's for 2A and 2B:
sum_20 <- km2_dpt %>%
filter(CODE_DEPT %in% c("2A","2B")) %>%
summarise(sum(surface_m))
km2_dpt$CODE_DEPT <- as.character(km2_dpt$CODE_DEPT)
km2_dpt[km2_dpt$CODE_DEPT=="2A",1] <- "20"
km2_dpt[km2_dpt$CODE_DEPT=="2A",2] <- sum_20
km2_dpt <- km2_dpt[!km2_dpt$CODE_DEPT == "2B",]
#rename CODE_DEPT to dpt:
km2_dpt <- km2_dpt %>%
arrange(CODE_DEPT) %>%
rename(dpt = CODE_DEPT)
#join the 2 tables together to have every information in 1 table
km2_dpt <- inner_join(km2_dpt,table_dpt_2010,by="dpt")
#calculate the rates
km2_dpt <- km2_dpt %>%
mutate(sum_child=sum_child/surface_m,
count_coll=count_coll/surface_m,
sum_facts=sum_facts/surface_m) %>%
rename(child_2010_per_km2 = sum_child,
coll_2010_per_km2 = count_coll,
facts_2010_per_km2 = sum_facts) %>%
select(-surface_m) %>%
arrange(dpt)
View(km2_dpt)
#####replace missing value !!!!!!
cor(km2_dpt$child_2010_per_km2,km2_dpt$facts_2010_per_km2)
View(prenoms_c)
View(dpp_modif_c)
View(faits_2010_modif_c)
View(dpt_data_modif_c)
sum(is.na(table_dpt_2010))
View(km2_dpt)
#####replace missing value !!!!!!
cor(km2_dpt$child_2010_per_km2,km2_dpt$facts_2010_per_km2)
#strong correlation! cor=0.9909782. The higher the number of births in one year, the higher the facts related by the police per km2 in 2010. Linear relationship!
View(prenoms_c)
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
filter(1:15) %>%
View()
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
View()
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
top_n(15) %>%
View()
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
#top_n(15) %>%
View()
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
top_n(15) %>%
View()
wide_table <- prenoms_c %>%
filter(name %in% names_top15) %>%
View()
<-
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
top_n(15) %>%
View()
wide_table <- prenoms_c %>%
filter(name %in% names_top15$name) %>%
wide_table <- prenoms_c %>%
filter(name %in% names_top15$name) %>%
View()
names_top15
#filter the 15 most given first names
names_top15 <- prenoms_c %>%
group_by(name) %>%
summarise(popularity=sum(n)) %>%
arrange(desc(popularity)) %>%
top_n(15)
names_top15
names_top15$name
wide_table <- prenoms_c %>%
filter(name %in% names_top15$name) %>%
View()
